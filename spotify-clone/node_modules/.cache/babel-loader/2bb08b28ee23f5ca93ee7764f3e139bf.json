{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91908\\\\Dropbox\\\\My PC (LAPTOP-N7GNE1OQ)\\\\Downloads\\\\Spotify-Clone-master\\\\spotify-clone\\\\src\\\\components\\\\Playlist\\\\Playlist.js\";\nimport React, { useState } from 'react';\nimport './Playlist.css';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\nimport { useStateValue } from '../../StateProvider';\nimport SongRow from '../SongRow/SongRow';\nexport default function Playlist() {\n  var _playlist$images, _playlist$images$;\n\n  const [select, setSelect] = useState(null);\n  const [{\n    user,\n    playlist,\n    playing\n  }, dispatch] = useStateValue();\n\n  const playSong = (id, index) => {\n    dispatch({\n      type: 'SET_ITEM',\n      item: playlist.tracks.items[index].track\n    });\n    dispatch({\n      type: 'SET_INDEX',\n      index: index\n    });\n    dispatch({\n      type: 'SET_PLAYING',\n      playing: id\n    });\n    dispatch({\n      type: 'SET_PAUSE',\n      paused: false\n    });\n  };\n\n  const handleSelect = id => {\n    if (select) setSelect(null);else setSelect(id);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlist__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, (playlist === null || playlist === void 0 ? void 0 : (_playlist$images = playlist.images) === null || _playlist$images === void 0 ? void 0 : _playlist$images[0]) ? /*#__PURE__*/React.createElement(\"img\", {\n    src: playlist === null || playlist === void 0 ? void 0 : (_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url,\n    alt: playlist === null || playlist === void 0 ? void 0 : playlist.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://png.pngtree.com/png-vector/20190329/ourlarge/pngtree-vector-music-note-icon-png-image_889465.jpg\",\n    alt: \"No Album Art\",\n    style: {\n      opacity: '0.6'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlist__infoText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"PLAYLIST\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, playlist === null || playlist === void 0 ? void 0 : playlist.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, (playlist === null || playlist === void 0 ? void 0 : playlist.description) || (user === null || user === void 0 ? void 0 : user.display_name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlist__songs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlist__icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlayCircleFilledIcon, {\n    className: \"playlist__play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteIcon, {\n    fontSize: \"large\",\n    className: \"playlist__fav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: \"playlist__more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(SongRow, {\n    key: 999,\n    num: '#',\n    Icon: AccessTimeOutlinedIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), playlist === null || playlist === void 0 ? void 0 : playlist.tracks.items.map((item, i) => /*#__PURE__*/React.createElement(SongRow, {\n    key: i,\n    track: item.track,\n    num: i + 1,\n    play: playSong,\n    playingId: playing,\n    onSelect: () => handleSelect(item.track.id),\n    select: select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/91908/Dropbox/My PC (LAPTOP-N7GNE1OQ)/Downloads/Spotify-Clone-master/spotify-clone/src/components/Playlist/Playlist.js"],"names":["React","useState","PlayCircleFilledIcon","FavoriteIcon","MoreHorizIcon","AccessTimeOutlinedIcon","useStateValue","SongRow","Playlist","select","setSelect","user","playlist","playing","dispatch","playSong","id","index","type","item","tracks","items","track","paused","handleSelect","images","url","name","opacity","description","display_name","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAC;AAAEU,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAD,EAA8BC,QAA9B,IAA0CR,aAAa,EAA7D;;AAEA,QAAMS,QAAQ,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC9BH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBC,KAAhB,CAAsBJ,KAAtB,EAA6BK;AAF5B,KAAD,CAAR;AAKAR,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,WADC;AAEPD,MAAAA,KAAK,EAAEA;AAFA,KAAD,CAAR;AAKAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,aADC;AAEPL,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAKAF,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,WADC;AAEPK,MAAAA,MAAM,EAAE;AAFD,KAAD,CAAR;AAID,GApBD;;AAsBA,QAAMC,YAAY,GAAIR,EAAD,IAAQ;AAC3B,QAAGP,MAAH,EAAWC,SAAS,CAAC,IAAD,CAAT,CAAX,KACKA,SAAS,CAACM,EAAD,CAAT;AACN,GAHD;;AAKA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,CAACJ,QAAD,aAACA,QAAD,2CAACA,QAAQ,CAAEa,MAAX,qDAAC,iBAAmB,CAAnB,CAAD,iBACA;AACE,IAAA,GAAG,EAAEb,QAAF,aAAEA,QAAF,4CAAEA,QAAQ,CAAEa,MAAV,CAAiB,CAAjB,CAAF,sDAAE,kBAAqBC,GAD5B;AAEE,IAAA,GAAG,EAAEd,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEe,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,gBAKA;AACE,IAAA,GAAG,EAAC,0GADN;AAEE,IAAA,GAAG,EAAC,cAFN;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAaE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAEe,IAAf,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,CAAAf,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEiB,WAAV,MAAyBlB,IAAzB,aAAyBA,IAAzB,uBAAyBA,IAAI,CAAEmB,YAA/B,CAAJ,CAHF,CAbF,CADF,eAqBE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAC,OAAvB;AAA+B,IAAA,SAAS,EAAC,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,aAAD;AAAgB,IAAA,SAAS,EAAC,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,eAME,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAE,GAAd;AAAmB,IAAA,GAAG,EAAE,GAAxB;AAA6B,IAAA,IAAI,EAAEzB,sBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAQIO,QARJ,aAQIA,QARJ,uBAQIA,QAAQ,CAAEQ,MAAV,CAAiBC,KAAjB,CAAuBU,GAAvB,CAA2B,CAACZ,IAAD,EAAOa,CAAP,kBACzB,oBAAC,OAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,KAAK,EAAEb,IAAI,CAACG,KAFd;AAGE,IAAA,GAAG,EAAEU,CAAC,GAAC,CAHT;AAIE,IAAA,IAAI,EAAEjB,QAJR;AAKE,IAAA,SAAS,EAAEF,OALb;AAME,IAAA,QAAQ,EAAE,MAAMW,YAAY,CAACL,IAAI,CAACG,KAAL,CAAWN,EAAZ,CAN9B;AAOE,IAAA,MAAM,EAAEP,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARJ,CArBF,CADF;AA6CD","sourcesContent":["import React, { useState } from 'react';\nimport './Playlist.css';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\nimport { useStateValue } from '../../StateProvider';\nimport SongRow from '../SongRow/SongRow';\n\nexport default function Playlist() {\n  const [select, setSelect] = useState(null);\n  const [{ user, playlist, playing }, dispatch] = useStateValue();\n\n  const playSong = (id, index) => {\n    dispatch({\n      type: 'SET_ITEM',\n      item: playlist.tracks.items[index].track\n    });\n\n    dispatch({\n      type: 'SET_INDEX',\n      index: index\n    });\n\n    dispatch({\n      type: 'SET_PLAYING',\n      playing: id\n    });\n\n    dispatch({\n      type: 'SET_PAUSE',\n      paused: false\n    })\n  };\n\n  const handleSelect = (id) => {\n    if(select) setSelect(null);\n    else setSelect(id);\n  }\n\n  return (\n    <>\n      <div className=\"playlist__info\">\n        {\n          (playlist?.images?.[0]) ?\n          <img\n            src={playlist?.images[0]?.url}\n            alt={playlist?.name}\n          /> :\n          <img\n            src='https://png.pngtree.com/png-vector/20190329/ourlarge/pngtree-vector-music-note-icon-png-image_889465.jpg'\n            alt='No Album Art'\n            style={{ opacity: '0.6'}}\n          />\n        }\n        <div className=\"playlist__infoText\">\n          <strong>PLAYLIST</strong>\n          <h2>{playlist?.name}</h2>\n          <p>{playlist?.description || user?.display_name}</p>\n        </div>\n      </div>\n\n      <div className=\"playlist__songs\">\n        <div className=\"playlist__icons\">\n          <PlayCircleFilledIcon className=\"playlist__play\" />\n          <FavoriteIcon fontSize=\"large\" className=\"playlist__fav\"/>\n          <MoreHorizIcon  className=\"playlist__more\"/>\n        </div>\n        <SongRow key={999} num={'#'} Icon={AccessTimeOutlinedIcon} />\n        {\n          playlist?.tracks.items.map((item, i) => (\n            <SongRow\n              key={i}\n              track={item.track}\n              num={i+1}\n              play={playSong}\n              playingId={playing}\n              onSelect={() => handleSelect(item.track.id)}\n              select={select}\n            />\n          ))\n        }\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}