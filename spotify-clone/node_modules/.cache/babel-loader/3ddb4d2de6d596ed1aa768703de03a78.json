{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91908\\\\Dropbox\\\\My PC (LAPTOP-N7GNE1OQ)\\\\Downloads\\\\Spotify-Clone-master\\\\spotify-clone\\\\src\\\\components\\\\Browse\\\\Browse.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useStateValue } from '../../StateProvider';\nimport './Browse.css';\nimport Category from '../Category/Category';\nexport default function Browse({\n  spotify\n}) {\n  const [{}, dispatch] = useStateValue();\n  const [categories, setCategories] = useState([]);\n  const [topArtists, setTopArtists] = useState([]);\n  useEffect(() => {\n    spotify.getCategories({\n      limit: 50,\n      country: 'US'\n    }).then(res => {\n      setCategories(res.categories.items);\n    }).catch(err => console.log(err));\n    spotify.getMyTopArtists({\n      limit: 20\n    }).then(res => {\n      setTopArtists(res.items);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const getPlaylist = category_id => {\n    // get a list of playsts for the given category id\n    spotify.getCategoryPlaylists(category_id, {\n      limite: 1\n    }).then(res => {\n      const pid = res.playlists.items[0].id; // get only the first playlist for this category\n\n      spotify.getPlaylist(pid).then(data => {\n        dispatch({\n          type: 'SET_PLAYLIST',\n          playlist: data\n        });\n        dispatch({\n          type: 'SET_TAB',\n          tab: null\n        });\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  };\n\n  const getArtistInfo = id => {\n    dispatch({\n      type: 'SET_ARTIST',\n      artistId: id\n    });\n    dispatch({\n      type: 'SET_TAB',\n      tab: 'Artist'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"browse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"browse__top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Your top artists\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"browse__topGenres\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, topArtists.map((artist, i) => {\n    var _artist$images, _artist$images$;\n\n    return /*#__PURE__*/React.createElement(Category, {\n      key: i,\n      url: (_artist$images = artist.images) === null || _artist$images === void 0 ? void 0 : (_artist$images$ = _artist$images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n      name: artist.name,\n      type: artist.type,\n      handleClick: () => getArtistInfo(artist.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"browse__bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Browse all\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"browse__bottomCategories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, categories.map((category, i) => {\n    var _category$icons, _category$icons$;\n\n    return /*#__PURE__*/React.createElement(Category, {\n      key: i,\n      url: (_category$icons = category.icons) === null || _category$icons === void 0 ? void 0 : (_category$icons$ = _category$icons[0]) === null || _category$icons$ === void 0 ? void 0 : _category$icons$.url,\n      name: category.name,\n      handleClick: () => getPlaylist(category.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["C:/Users/91908/Dropbox/My PC (LAPTOP-N7GNE1OQ)/Downloads/Spotify-Clone-master/spotify-clone/src/components/Browse/Browse.js"],"names":["React","useState","useEffect","useStateValue","Category","Browse","spotify","dispatch","categories","setCategories","topArtists","setTopArtists","getCategories","limit","country","then","res","items","catch","err","console","log","getMyTopArtists","getPlaylist","category_id","getCategoryPlaylists","limite","pid","playlists","id","data","type","playlist","tab","getArtistInfo","artistId","map","artist","i","images","url","name","category","icons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useStateValue } from '../../StateProvider';\nimport './Browse.css';\nimport Category from '../Category/Category';\n\nexport default function Browse({ spotify }) {\n  const [{}, dispatch] = useStateValue();\n  const [categories, setCategories] = useState([]);\n  const [topArtists, setTopArtists] = useState([]);\n\n  useEffect(() => {\n    spotify.getCategories({ limit: 50, country: 'US'})\n      .then(res => {\n        setCategories(res.categories.items);\n      })\n      .catch(err => console.log(err));\n\n      spotify.getMyTopArtists({ limit: 20 })\n        .then(res => {\n          setTopArtists(res.items);\n        })\n        .catch(err => console.log(err));\n  }, []);\n\n  const getPlaylist = (category_id) => {\n    // get a list of playsts for the given category id\n    spotify.getCategoryPlaylists(category_id, { limite: 1 })\n      .then(res => {\n        const pid = res.playlists.items[0].id;\n        // get only the first playlist for this category\n        spotify.getPlaylist(pid)\n          .then(data => {\n            dispatch({\n              type: 'SET_PLAYLIST',\n              playlist: data\n            });\n\n            dispatch({\n              type: 'SET_TAB',\n              tab: null\n            });\n          })\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  }\n\n  const getArtistInfo = (id) => {\n    dispatch({\n      type: 'SET_ARTIST',\n      artistId: id\n    });\n\n    dispatch({\n      type: 'SET_TAB',\n      tab: 'Artist'\n    });\n  }\n\n  return (\n    <div className=\"browse\">\n      <div className=\"browse__top\">\n        <h2>Your top artists</h2>\n        <div className=\"browse__topGenres\">\n          {\n            topArtists.map((artist, i) => (\n              <Category\n                key={i}\n                url={artist.images?.[0]?.url}\n                name={artist.name}\n                type={artist.type}\n                handleClick={() => getArtistInfo(artist.id)}\n              />\n            ))\n          }\n        </div>\n      </div>\n\n      <div className=\"browse__bottom\">\n        <h2>Browse all</h2>\n        <div className=\"browse__bottomCategories\">\n          {\n            categories.map((category, i) => (\n              <Category\n                key={i}\n                url={category.icons?.[0]?.url}\n                name={category.name}\n                handleClick={() => getPlaylist(category.id)}\n              />\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}