{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91908\\\\Dropbox\\\\My PC (LAPTOP-N7GNE1OQ)\\\\Downloads\\\\Spotify-Clone-master\\\\spotify-clone\\\\src\\\\components\\\\SongRow\\\\SongRow.js\";\nimport React, { useState } from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { useStateValue } from '../../StateProvider';\nimport './SongRow.css'; // convert ms to 00:00 format\n\nconst getTime = time => {\n  const totalSecs = Math.floor(time / 1000);\n  const minutes = Math.floor(totalSecs / 60);\n  const secs = totalSecs % 60;\n  let part2;\n  if (secs < 10) part2 = `0${secs}`;else if (secs === 0) part2 = '00';else part2 = `${secs}`;\n  return `${minutes}:` + part2;\n};\n\nconst songState = (track, id, hover, paused, num) => {\n  if (track.id === id) {\n    if (!track.preview_url) return /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 35\n      }\n    });\n    if (paused) return /*#__PURE__*/React.createElement(PlayArrowIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 23\n      }\n    });\n    if (hover) return /*#__PURE__*/React.createElement(PauseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }\n    }); // return loading gif\n\n    return /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        height: '20px',\n        width: '20px'\n      },\n      src: \"https://open.scdn.co/cdn/images/equaliser-animated-green.73b73928.gif\",\n      alt: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (hover) return /*#__PURE__*/React.createElement(PlayArrowIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }\n  });\n  return num;\n};\n\nexport default function SongRow({\n  track,\n  num,\n  Icon,\n  play,\n  playingId,\n  onSelect,\n  select\n}) {\n  var _track$album, _track$album$images$, _playlist$images, _playlist$images$, _track$album2;\n\n  const [hoverOver, setHoverOver] = useState(false);\n  const [{\n    playing,\n    paused,\n    playlist\n  }, dispatch] = useStateValue();\n\n  const handlePause = id => {\n    // switch to another song\n    if (id !== playing) {\n      dispatch({\n        type: 'SET_PLAYING',\n        playing: id\n      });\n      dispatch({\n        type: 'SET_INDEX',\n        index: num - 1\n      });\n      dispatch({\n        type: 'SET_PAUSE',\n        paused: false\n      });\n      dispatch({\n        type: 'SET_ITEM',\n        item: track\n      });\n      return;\n    }\n\n    dispatch({\n      type: 'SET_PAUSE',\n      paused: !paused\n    });\n  };\n\n  const handleEnter = () => {\n    setHoverOver(true);\n  };\n\n  const handleLeave = () => {\n    setHoverOver(false);\n  };\n\n  return num !== '#' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"songRow\",\n    onMouseEnter: handleEnter,\n    onMouseLeave: handleLeave,\n    onDoubleClick: () => play(track.id, num - 1),\n    onClick: onSelect,\n    style: select === track.id ? {\n      backgroundColor: '#707070',\n      color: 'white'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"songRow__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"songRow__order\",\n    onClick: () => handlePause(track.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, songState(track, playingId, hoverOver, paused, num)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"songRow__album\",\n    src: ((_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images$ = _track$album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url) || ((_playlist$images = playlist.images) === null || _playlist$images === void 0 ? void 0 : (_playlist$images$ = _playlist$images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"songRow__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: playing === track.id ? {\n      color: '#1ed15e'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, track.name), /*#__PURE__*/React.createElement(\"p\", {\n    style: select === track.id ? {\n      color: 'inherit'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, track.artists.map(artist => artist.name).join(\", \")))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"songRow__albumName\",\n    style: select === track.id ? {\n      color: 'inherit'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : _track$album2.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"songRow__time\",\n    style: select === track.id ? {\n      color: 'inherit'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, getTime(track.duration_ms))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"songRow songRow__underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"songRow__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"songRow__order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, num), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"songRow__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontWeight: '400'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, 'TITLE'))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"songRow__albumName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, 'ALBUM'), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"songRow__time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 8\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/91908/Dropbox/My PC (LAPTOP-N7GNE1OQ)/Downloads/Spotify-Clone-master/spotify-clone/src/components/SongRow/SongRow.js"],"names":["React","useState","PlayArrowIcon","PauseIcon","ErrorOutlineIcon","useStateValue","getTime","time","totalSecs","Math","floor","minutes","secs","part2","songState","track","id","hover","paused","num","preview_url","height","width","SongRow","Icon","play","playingId","onSelect","select","hoverOver","setHoverOver","playing","playlist","dispatch","handlePause","type","index","item","handleEnter","handleLeave","backgroundColor","color","album","images","url","name","artists","map","artist","join","duration_ms","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { useStateValue } from '../../StateProvider';\nimport './SongRow.css';\n\n// convert ms to 00:00 format\nconst getTime = (time) => {\n  const totalSecs = Math.floor(time / 1000);\n  const minutes = Math.floor(totalSecs / 60);\n  const secs = totalSecs % 60;\n\n  let part2;\n  if(secs < 10) part2 = `0${secs}`;\n  else if (secs === 0) part2 = '00';\n  else part2 = `${secs}`;\n\n  return `${minutes}:`+part2;\n}\n\nconst songState = (track, id, hover, paused, num) => {\n  if(track.id === id) {\n    if(!track.preview_url) return <ErrorOutlineIcon />\n    if(paused) return <PlayArrowIcon />;\n    if(hover) return <PauseIcon />;\n\n    // return loading gif\n    return (\n      <img\n        style={{ height: '20px', width: '20px' }}\n        src=\"https://open.scdn.co/cdn/images/equaliser-animated-green.73b73928.gif\"\n        alt=\"loading\"\n      />\n    );\n  }\n\n  if(hover) return <PlayArrowIcon />\n  return num;\n}\n\nexport default function SongRow({ track, num, Icon, play, playingId, onSelect, select }) {\n  const [hoverOver, setHoverOver] = useState(false);\n  const [{ playing, paused, playlist }, dispatch] = useStateValue();\n\n  const handlePause = (id) => {\n    // switch to another song\n    if(id !== playing) {\n      dispatch({\n        type: 'SET_PLAYING',\n        playing: id\n      });\n\n      dispatch({\n        type: 'SET_INDEX',\n        index: num-1\n      });\n\n      dispatch({\n        type: 'SET_PAUSE',\n        paused: false\n      })\n\n      dispatch({\n        type: 'SET_ITEM',\n        item: track\n      });\n      return;\n    }\n\n    dispatch({\n      type: 'SET_PAUSE',\n      paused: !paused\n    });\n  }\n\n  const handleEnter = () => {\n    setHoverOver(true);\n  }\n\n  const handleLeave = () => {\n    setHoverOver(false);\n  }\n\n  return num !== '#' ? (\n    <div\n      className=\"songRow\"\n      onMouseEnter={handleEnter}\n      onMouseLeave={handleLeave}\n      onDoubleClick={() => play(track.id, num-1)}\n      onClick={onSelect}\n      style={select === track.id ? {backgroundColor: '#707070', color: 'white', } : {}}\n    >\n      <div className=\"songRow__left\">\n        <p className=\"songRow__order\" onClick={() => handlePause(track.id)}>\n          {songState(track, playingId, hoverOver, paused, num)}\n        </p>\n        <img\n          className=\"songRow__album\"\n          src={track.album?.images[0]?.url || playlist.images?.[0]?.url} \n          alt=\"\"\n        />\n        <div className=\"songRow__info\">\n          <h4 style={playing === track.id ? {color: '#1ed15e'} : {}}>{track.name}</h4>\n          <p style={select === track.id ? {color: 'inherit', } : {}}>\n            {track.artists.map(artist => artist.name).join(\", \")}\n          </p>\n        </div>\n      </div>\n\n      <p\n        className=\"songRow__albumName\"\n        style={select === track.id ? {color: 'inherit', } : {}}\n      >\n        {track.album?.name}\n      </p>\n      <p\n        className=\"songRow__time\"\n        style={select === track.id ? {color: 'inherit', } : {}}\n      >\n        {getTime(track.duration_ms)}\n      </p>\n    </div>\n  ) :\n  <div className=\"songRow songRow__underline\">\n    <div className=\"songRow__left\">\n      <p className=\"songRow__order\">{num}</p>\n      <div className=\"songRow__info\">\n        <h4 style={{fontWeight: '400'}}>{'TITLE'}</h4>\n      </div>\n    </div>\n\n    <p className=\"songRow__albumName\">\n      {'ALBUM'}\n    </p>\n    <p className=\"songRow__time\">\n       <Icon />\n    </p>\n  </div>\n  ;\n}\n"]},"metadata":{},"sourceType":"module"}