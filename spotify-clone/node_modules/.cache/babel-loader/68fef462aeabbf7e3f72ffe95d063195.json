{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91908\\\\Dropbox\\\\My PC (LAPTOP-N7GNE1OQ)\\\\Downloads\\\\Spotify-Clone-master\\\\spotify-clone\\\\src\\\\App.js\";\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login/Login\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { getTokenFromUrl } from \"./components/Spotify/Spotify\";\nimport Player from \"./components/Player/Player\";\nimport { useStateValue } from \"./StateProvider\"; // create an instance of spotify so we can use spotify service in react\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{\n    user,\n    token\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl(); // clear the returned url from spotify\n\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      //dispatch the retrieved token to the global context\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token); // get the current user info\n\n      spotify.getMe().then(user => {\n        // dispatch the current user info to the global context\n        dispatch({\n          type: \"SET_USER\",\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        });\n      }).catch(err => alert(err.message));\n      spotify.getPlaylist(\"37i9dQZEVXcQ9COmYvdajy\").then(res => {\n        dispatch({\n          type: \"SET_PLAYLIST\",\n          playlist: res\n        });\n      }).catch(err => alert(err.message));\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, token ? /*#__PURE__*/React.createElement(Player, {\n    spotify: spotify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }\n  }) : /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 47\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/91908/Dropbox/My PC (LAPTOP-N7GNE1OQ)/Downloads/Spotify-Clone-master/spotify-clone/src/App.js"],"names":["React","useEffect","Login","SpotifyWebApi","getTokenFromUrl","Player","useStateValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists","catch","err","alert","message","getPlaylist","res","playlist"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAT,QAA8B,iBAA9B,C,CAEA;;AACA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;;AAEA,SAASK,GAAT,GAAe;AACb,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAkBC,QAAlB,IAA8BL,aAAa,EAAjD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,IAAI,GAAGR,eAAe,EAA5B,CADc,CAEd;;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAY;AACV;AACAJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAKAR,MAAAA,OAAO,CAACW,cAAR,CAAuBH,MAAvB,EAPU,CASV;;AACAR,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAsBX,IAAD,IAAU;AAC7B;AACAE,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPR,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OAND;AAQAF,MAAAA,OAAO,CACJc,gBADH,GAEGD,IAFH,CAESE,SAAD,IAAe;AACnBX,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPK,UAAAA,SAAS,EAAEA;AAFJ,SAAD,CAAR;AAID,OAPH,EAQGC,KARH,CAQUC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CARvB;AAUAnB,MAAAA,OAAO,CACJoB,WADH,CACe,wBADf,EAEGP,IAFH,CAESQ,GAAD,IAAS;AACbjB,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,cADC;AAEPY,UAAAA,QAAQ,EAAED;AAFH,SAAD,CAAR;AAID,OAPH,EAQGL,KARH,CAQUC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CARvB;AASD;AACF,GA5CQ,EA4CN,EA5CM,CAAT;AA8CA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,gBAAG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAkC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,CADF;AAKD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login/Login\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { getTokenFromUrl } from \"./components/Spotify/Spotify\";\nimport Player from \"./components/Player/Player\";\nimport { useStateValue } from \"./StateProvider\";\n\n// create an instance of spotify so we can use spotify service in react\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    // clear the returned url from spotify\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      //dispatch the retrieved token to the global context\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n\n      // get the current user info\n      spotify.getMe().then((user) => {\n        // dispatch the current user info to the global context\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      spotify\n        .getUserPlaylists()\n        .then((playlists) => {\n          dispatch({\n            type: \"SET_PLAYLISTS\",\n            playlists: playlists,\n          });\n        })\n        .catch((err) => alert(err.message));\n\n      spotify\n        .getPlaylist(\"37i9dQZEVXcQ9COmYvdajy\")\n        .then((res) => {\n          dispatch({\n            type: \"SET_PLAYLIST\",\n            playlist: res,\n          });\n        })\n        .catch((err) => alert(err.message));\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}